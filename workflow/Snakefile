#fastq_dir = "/mnt/c/Users/Anthony/Documents/breast_cancer/data/" #ordi
# Version 0.2.0 Projet detection variants / nv transcrits du cancer du seins Projet Dre. Brunet
# >>> Ajout  : procedures de manipulation ARNseq data avec les rules
# >>> À Ajouter : Va falloir automatiser les rentrées de données et la manipulations des fichiers /nom etc. 
# Chaque rule est a corriger / rule all a ajouter et rule wildcards 
# FastQc -> Controle qualité sur les datas
# Trim_Galore -> Trimming des FastQc 
# FastQc -> Vérification que le trimming s'est bien déroulé
# Star -> alignement sur génome de reference  *** 
#merge bam samtool/ module java
###USAGE example(explication/détails des outils): 
#18/09  pipeline fourni la fiche de controle qualité.html mais aussi le zip détaillé ; TRIM-GALORE DONNE UN FICHIER .GZ +TEXT EXPLICATIF, 
# puis un autre controle qualité pour vérifier si trim-galore n'a pas trop tout détruit
#ce qu'il faut, c'est prendre les transcrits et nvx transcrits , creer un nouveau fasta manuellement combinants les variants qui seront trouvés et les renommés #on ne veut pas savoir quil y a le cancer, on le sait deja, mais 
#quel sont les changements proteiques et quel est limpact 
# snakemake --profile ../profile_local/ --latency-wait 3


configfile: "../profile_local/config.yaml"
configfile: "../config/config.json"

id_list = [
    "171992_SIMG0590_T_totalRNA_sarcoma_43378_S9_L002"  # a grande quantité, un traitement de lignes de fichier fera cela

]

include: "rules/download_genome.smk"  
include: "rules/star.smk"
include: "rules/kallisto.smk"
include: "rules/variants.smk"


rule all:
    input:
        expand("data/qc/{id}_R1_001.220405.A00516.AHVHTNDSX2_fastqc.html", id=id_list),
        expand("data/qc/{id}_R2_001.220405.A00516.AHVHTNDSX2_fastqc.html", id=id_list),
        expand("data/trim_galore/{id}_R1_001.220405.A00516.AHVHTNDSX2_val_1.fq.gz", id=id_list), 
        expand("data/trim_galore/{id}_R2_001.220405.A00516.AHVHTNDSX2_val_2.fq.gz", id=id_list), 
        expand("data/qc_trim_galore/{id}_R1_001.220405.A00516.AHVHTNDSX2_val_1_fastqc.html", id=id_list),
        expand("data/qc_trim_galore/{id}_R2_001.220405.A00516.AHVHTNDSX2_val_2_fastqc.html", id=id_list),
        expand("results/STAR/{id}/Aligned.sortedByCoord.out.bam", id = id_list),   
        expand("data/variants/{id}_filtred.vcf", id=id_list)

rule download_genome:
    input:
        gff3 = 'data/references/gff3/homo_sapiens.gff3',
        genome = 'data/references/genome_fa/homo_sapiens_genome.fa',


rule quantification: 
    input:
        build_transcriptome = "data/references/kallisto/transcriptome.fa",
        build_index = "data/references/kallisto/transcriptome.fa",
        Kall_quantif = expand("results/dge/kallisto/{id}/abundance.tsv", id = id_list),# résultat
